#!/bin/ksh

########################################

# NAMRR Preliminary data setup step

########################################

date

export PS4=' $SECONDS + ' 

set -x

#######################################################

# The following variable could be defined in the 

# submission script (the ecf script), if 

# not they will take the default values which is set 

# for the NCO running enviroment

#######################################################

export RUN_ENVIR=${RUN_ENVIR:-nco}

export OMP_NUM_THREADS=1

######################

# Set NET and RUN

######################

export NET=rtma3d

#export RUN=rtma2p5, akrtma, hirtma, prrtma, gurtma, or rurtma2p5   #RUN MUST COME FROM HIGHER LEVEL SCRIPT! /MPondeca, 26Jul2015

# Note: grib_util module loaded in submission (lsf or ecFlow) script

##########################################################

# obtain unique process id (pid) and make temp directories

##########################################################

export jobid=${jobid:-"${outid}.o$$"}

export DATA=${DATA:-${DATAROOT:?}/${jobid:?}}  #jobid ($job.$LSB_JOBID MUST BE DEFINED IN TERNS OF $RUN IN UPPER LEVEL SCRIPT /MPondeca, 26Jul2015
if [ -d $DATA ] ; then
   rm  -rf $DATA/*
else
   mkdir -p $DATA
fi
cd $DATA

####################################

# File To Log Msgs

####################################

export jlogfile=${jlogfile:-$COMROOT/logs/jlogfiles/jlogfile.$jobid}

####################################

# Determine Job Output Name on System

####################################

PDYm1=`$NDATE -24 ${PDY}${cyc} | cut -c 1-8`

# export pgmout=${pgmout:-"OUTPUT.$$"}
export pgmout=${pgmout:-"OUTPUT.${PDY}${cyc}${subcyc}.${jobid}"}

export cycle=t${cyc}${subcyc}z 

export subcyc=${subcyc}  #Note: Must define subcyc in upper level script. Can be 00, 15, 30, or 45 /MPondeca, 30Jun2017

                         #only used for rurtma2p5


# Specify Execution Areas


export PROD_HEAD=${PROD_HEAD:-"${RUN}.${cycle}"}

export HOMErtma3d=${HOMErtma3d:-$NWROOT/rtma.${rtma_ver}}

export EXECrtma3d=${EXECrtma3d:-$HOMErtma/exec}

export FIXrtma3d=${FIXrtma3d:-$HOMErtma/fix/${RUN}}

export PARMrtma3d=${PARMrtma3d:-$HOMErtma/parm/${RUN}}

export USHrtma3d=${USHrtma3d:-$HOMErtma/ush/${RUN}}

export UTILrtma3d=${UTILrtma3d:-$HOMErtma3d/util/${RUN}}

export config_dir=${config_dir:-$PARMverf/config_files}

export urma_dir_ops=${urma_dir_ops:-$DATA_OBSPRD}

export urma_dir=${urma_dir:-$DATA_OBSPRD}

export DATA_RUNDIR=${DATA_RUNDIR:-"${DATAROOT}/${envir}/${RUN}.${PDY}${cyc}${subcyc}"}
# stat_dir and MET_DIR are both used in verification MET script
# MET_DIR: as MET running dir
# stat_dir: as statistics results output dir (could be same as MET_DIR?)
export DATA_VERIF=${DATA_VERIF:-"${DATA_RUNDIR}/verifprd"}
export stat_dir=${stat_dir:-"${DATA_VERIF}"}
export MET_DIR=${MET_DIR:-"$DATA"}
if [ ! -d $MET_DIR ] ; then
   mkdir -p $MET_DIR
fi

export MASKS=${MASKS:-$PARMverf/masks}


###########################################

# Run setpdy and initialize PDY variables

###########################################

#setpdy.sh

#. ${DATA}/PDY

#################################################

# Set up the INPUT and OUTPUT directories

#################################################

export COMOUT=${COMOUT:-$COMROOT/${NET}/${envir}}/${RUN}.${PDY}

if [ ! -d "${COMOUT}" ] ; then
   mkdir -p $COMOUT
fi

export COMOUTpost_rtma3d=${COMOUTpost_rtma3d:-${COMOUT}/postprd.${cycle}}

### 3DRTMA Verification Products
export COMOUTverif_rtma3d=${COMOUTverif_rtma3d:-"${COMOUT}/verifprd.${cycle}"}
if [ ! -d "${COMOUTverif_rtma3d}" ] ; then
   mkdir -p ${COMOUTverif_rtma3d}
fi

###########################################################

#

# The following variables are used in exrtma3d_gsianl.ksh

#

###########################################################

#   Set the path to the gsi executable

    export VERIF_ROOT=${EXECrtma3d:?}

########################################################

# Execute the script.

${exSCR_VERIF:-$HOMErtma3d/scripts/rtma3d_verif_subhr.ksh}

export err=$?; err_chk

msg="$0 of $job completed normally"

postmsg $jlogfile "$msg"

if [ -e "${pgmout}" ] ; then

   cat $pgmout

   cp -p $pgmout   ${LOG_PGMOUT}

fi

########################################################

##############################

# Remove the Temporary working directory

##############################

if [ "${KEEPDATA}" != YES ]; then

   rm -rf $DATA

fi

