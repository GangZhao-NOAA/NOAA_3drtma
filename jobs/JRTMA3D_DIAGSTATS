#!/bin/ksh

# --- for debug --- #
date
export PS4=' $SECONDS + ' 
set -x

#######################################################
# The following variable could be defined in the 
# submission script (the ecf script *.sms, or ROCOTO *.xml),
# if not, they will take the default values which is set 
# for the NCO running enviroment
#######################################################

export RUN_ENVIR=${RUN_ENVIR:-nco}

###################################
# Specify NET and RUN Name and model
####################################
export NET=${NET:-rtma3d}
export RUN=${RUN:-rtma3d}
export model=${model:-rtma3d}

##########################################################
# obtain unique process id (pid)
##########################################################
export job=${job:-"${outid}.o$$"}
export jobid=${jobid:-"${outid}.o$$"}
export MPIRUN=${MPIRUN:-"mpirun"}

export CNVGRIB=${CNVGRIB:-cnvgrib}

##########################################################
# make temp/running directories
##########################################################
export DATA=${DATA:-$DATAROOT/${jobid:?}} #jobid ($job.$LSB_JOBID MUST BE DEFINED IN TERMS OF $RUN IN UPPER LEVEL SCRIPT /MPondeca, 26Jul2015
if [ -d $DATA ] ; then
   ${ECHO} "$DATA exists, remove its content"
   if [ "${envir}" == "esrl" ]; then #Jet
     ${RM} -rf $DATA/obs_num_summary.txt #logic keeper
   else
     ${RM} -rf $DATA/*
   fi
else
   ${ECHO} "$DATA does not exist, create it"
   ${MKDIR} -p $DATA
fi
cd $DATA

#####################################################
# Run setpdy and initialize PDY variables
#    setpdy.sh needs the variables 
#    $PDY and $cyc already defined in advance
#####################################################
#setpdy.sh
#. ${DATA}/PDY
if [[ "${subcyc}" == "-1" ]]; then #it's hourly run
  export cycle=${cycle:-t${cyc}z}
  export pgmout=${pgmout:-"OUTPUT.${PDY}${cyc}.${jobid}"}
  export COMINmosaic=${COMINmosaic:-"${COMIN}/radar.${PDY}"}
else
  export cycle=${cycle:-t${cyc}${subcyc}z}
  export pgmout=${pgmout:-"OUTPUT.${PDY}${cyc}${subcyc}.${jobid}"}
  export COMINmosaic=${COMINmosaic:-"${COMIN}/radar.${PDY}"}
fi

export subcyc=${subcyc} #Note: Must define subcyc in upper level script. Can be 00, 15, 30, or 45 /MPondeca, 30Jun2017
                         #only used for rurtma2p5

####################################
# Determine Job Output Name on System
####################################
export LOG_JJOB=${LOG_JJOB:-$COMROOT/logs/jlogfiles}
export jlogfile=${jlogfile:-$LOG_JJOB/jlogfile.${jobid}}
if [ ! -d ${LOG_JJOB} ] ; then
   mkdir -p ${LOG_JJOB}
fi
if [ ! -d ${LOG_PGMOUT} ] ; then
   mkdir -p ${LOG_PGMOUT}
fi

# specify the file head for the file names of the archived data files
export PROD_HEAD=${PROD_HEAD:-"${RUN}.t${cyc}z"}

# Specify Execution Areas
export HOMErtma3d=${HOMErtma3d:-$NWROOT/rtma.${rtma_ver}}
export EXECrtma3d=${EXECrtma3d:-$HOMErtma3d/exec}
export FIXrtma3d=${FIXrtma3d:-$HOMErtma3d/fix/${RUN}}
export PARMrtma3d=${PARMrtma3d:-$HOMErtma3d/parm/${RUN}}
export USHrtma3d=${USHrtma3d:-$HOMErtma3d/ush/${RUN}}
export UTILrtma3d=${UTILrtma3d:-$HOMErtma3d/util/${RUN}}

# date and time for previous and next cycle
export PDYHH="${PDY}${cyc}"
export PDYHH_cycm1=$($NDATE -01  "${PDYHH}")
export PDYHH_cycp1=$($NDATE +01  "${PDYHH}")
export FGS_OPT=${FGS_OPT:-1}

#################################################
# Set up the INPUT and OUTPUT directories
#################################################
export COMIN=${COMIN:-${COMROOT}/${NET}/${envir}/${RUN}.${PDY}}
export COMOUT=${COMOUT:-${COMROOT}/${NET}/${envir}/${RUN}.${PDY}}

### Processed Observations ready to be used by RTMA3D_gsi
export COMINobsproc_rtma3d=${COMINobsproc_rtma3d:-"${COMIN}/obsprd.${cycle}"}
if [ ! -d "${COMINobsproc_rtma3d}" ] ; then
  echo " Directory of obs data does NOT exist. Job abort!"
  err_exit
fi

### Firstguess Products/Input for the RTMA3D (netcdf files) 
export GESINhrrr_rtma3d=${GESINhrrr_rtma3d:-"${COMIN}/fgsprd.${cycle}"}
if [ ! -d "${GESINhrrr_rtma3d}" ] ; then
  echo " Directory of HRRRs fgs data does NOT exist. Job abort!"
  err_exit
fi

### 3DRTMA GSIANL Products (netcdf)
export COMOUTgsi_rtma3d=${COMOUTgsi_rtma3d:-"${COMOUT}/gsiprd.${cycle}"}

if [ ! -d "${COMIN}" ] ; then
   mkdir -p $COMIN
fi
if [ ! -d "${COMOUT}" ] ; then
   mkdir -p $COMOUT
fi
if [ ! -d "${COMOUTgsi_rtma3d}" ] ; then
  ${MKDIR} -p ${COMOUTgsi_rtma3d}
fi

###########################################################
#
# The following variables are used in exrtma3d_diagstats.ksh
#
###########################################################
#   Set the name to the executable
#   export exefile_name_=${exefile_name_:-"rtma3d_diag"}
exef_diagconv="${EXECrtma3d}/rtma3d_read_diag_conv"
exef_diagrad="${EXECrtma3d}/rtma3d_read_diag_rad"
exef_count="${EXECrtma3d}/rtma3d_count_obs"

if [ "${envir}" != "esrl" ]; then #WCOSS
#   set the file name of the final analysis file for archive
#    some logics at WCOSS
fi

#   Set the path to the GSI static files
    export FIXgsi=${FIXgsi:-"${FIXrtma3d}/gsi"}
    export FIXcrtm=${FIXcrtm:-"${FIXrtma3d}/crtm"}
    export FIXwps=${FIXwps:-"${FIXrtma3d}/wps"}

    export PARMgsi=${PARMgsi:-"${PARMrtma3d}/gsi"}
    export PARMupp=${PARMupp:-"${PARMrtma3d}/upp"}
    export PARMwrf=${PARMwrf:-"${PARMrtma3d}/wrf"}

    export OBS_USELIST=${OBS_USELIST:-"${FIXrtma3d}/gsi"}
    export SFCOBS_USELIST=${SFCOBS_USELIST:-"${FIXrtma3d}/gsi"}
    export AIRCRAFT_REJECT=${AIRCRAFT_REJECT:-"${FIXrtma3d}/gsi"}
    export SFCOBS_PROVIDER=${SFCOBS_PROVIDER:-"${FIXrtma3d}/gsi"}

##########################################################

######################
# Execute the script.
######################
${exSCR_DIAGSTATS:-$HOMErtma3d/scripts/ex${RUN}_diagstats.ksh}
export err=$?; err_chk

msg="$0 of $job completed normally"
postmsg $jlogfile "$msg"

if [ -e "${pgmout}" ] ; then
   cat $pgmout
   cp -p $pgmout ${LOG_PGMOUT}
fi

##############################
# Remove the Temporary working directory
##############################
if [ "${KEEPDATA}" != YES ]; then
   rm -rf $DATA
fi

date
