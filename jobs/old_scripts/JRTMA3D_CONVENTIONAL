#!/bin/ksh

# --- for debug --- #
date
export PS4=' $SECONDS + ' 
set -x

#######################################################
# The following variable could be defined in the 
# submission script (the ecf script *.sms, or ROCOTO *.xml),
# if not, they will take the default values which is set 
# for the NCO running enviroment
#######################################################
np=`cat $PBS_NODEFILE | wc -l`

ulimit -s 512000

# Load modules (moved to jobs/launch.sh)

# Set paths to unix commands (moved to xml file)

# Set the path to the ssrc executable
export SSRC=${GSI_ROOT}/ssrc.exe

# Set the path to the gsi executable
export ENCODE_TAMDAR=${GSI_ROOT}/process_tamdar_netcdf.exe
export APPEND_VSESONDE=${GSI_ROOT}/prepbufr_append_vessonndes.exe
export APPEND_CLAMPS=${GSI_ROOT}/prepbufr_append_clamps.exe
export APPEND_STICKNET=${GSI_ROOT}/prepbufr_append_sticknet.exe

# Make sure DATAHOME is defined
if [ ! "${DATAHOME}" ]; then
  ${ECHO} "ERROR: \$DATAHOME is not defined!"
  exit 1
fi

# Make sure GSI_ROOT is defined and exists
if [ ! "${GSI_ROOT}" ]; then
  ${ECHO} "ERROR: \$GSI_ROOT is not defined!"
  exit 1
fi
if [ ! -d "${GSI_ROOT}" ]; then
  ${ECHO} "ERROR: GSI_ROOT directory '${GSI_ROOT}' does not exist!"
  exit 1
fi

if [ ! -d "${TAMDAR_ROOT}" ]; then
  ${ECHO} "ERROR: TAMDAR_ROOT directory '${TAMDAR_ROOT}' does not exist!"
  exit 1
fi

# Make sure START_TIME is defined and in the correct format
if [ ! "${START_TIME}" ]; then
  ${ECHO} "ERROR: \$START_TIME is not defined!"
  exit 1
else
  if [ `${ECHO} "${START_TIME}" | ${AWK} '/^[[:digit:]]{10}$/'` ]; then
    export START_TIME=`${ECHO} "${START_TIME}" | ${SED} 's/\([[:digit:]]\{2\}\)$/ \1/'`
  else
    if [ ! "`${ECHO} "${START_TIME}" | ${AWK} '/^[[:digit:]]{8}[[:blank:]]{1}[[:digit:]]{2}$/'`" ]; then
      ${ECHO} "ERROR: start time, '${START_TIME}', is not in 'yyyymmddhh' or 'yyyymmdd hh' format"
      exit 1
    fi
  fi
  export START_TIME=`${DATE} -d "${START_TIME}"`
fi

# Make sure PREPBUFR is defined and that the directory exists
if [ ! "${PREPBUFR}" ]; then
  ${ECHO} "ERROR: \$PREPBUFR is not defined"
  exit 1
fi
if [ ! -d "${PREPBUFR}" ]; then
  ${ECHO} "ERROR: directory '${PREPBUFR}' does not exist!"
  exit 1
fi
if [ ! "${PREPBUFR_SAT}" ]; then
  ${ECHO} "ERROR: \$PREPBUFR_SAT is not defined"
  exit 1
fi
if [ ! -d "${PREPBUFR_SAT}" ]; then
  ${ECHO} "ERROR: directory '${PREPBUFR_SAT}' does not exist!"
  exit 1
fi
if [ ! "${EARLY}" ]; then
  ${ECHO} "ERROR: \$EARLY is not defined"
  exit 1
fi

# Make sure the ssrc executable exists
if [ ! -x "${SSRC}" ]; then
  ${ECHO} "ERROR: ${SSRC} does not exist!"
  exit 1
fi

# Make sure the GSI executable exists
if [ ! -x "${ENCODE_TAMDAR}" ]; then
  ${ECHO} "ERROR: ${ENCODE_TAMDAR} does not exist!"
  exit 1
fi

# Create the obsprd directory if necessary and cd into it
if [ ! -d "${DATAHOME}" ]; then
  ${MKDIR} -p ${DATAHOME}
fi
cd ${DATAHOME}

# Compute date & time components for prepbufr filename
export YYYYMMDD=`${DATE} +"%Y%m%d" -d "${START_TIME}"`
export YYYYMMDDHH=`${DATE} +"%Y%m%d%H" -d "${START_TIME}"`
export YYYYJJJHH00=`${DATE} +"%Y%j%H00" -d "${START_TIME}"`
export YYYYJJJHH=`${DATE} +"%Y%j%H" -d "${START_TIME}"`
export PREYYJJJHH=`${DATE} +"%y%j%H" -d "${START_TIME} 1 hour ago"`
export YYJJJHH=`${DATE} +"%y%j%H" -d "${START_TIME}"`
export YYYY=`${DATE} +"%Y" -d "${START_TIME}"`
export MM=`${DATE} +"%m" -d "${START_TIME}"`
export DD=`${DATE} +"%d" -d "${START_TIME}"`
export HH=`${DATE} +"%H" -d "${START_TIME}"`
export PREYYYYMMDD=`${DATE} +"%Y%m%d" -d "${START_TIME} 1 hour ago"`
export PREHH=`${DATE} +"%H" -d "${START_TIME} 1 hour ago"`



######################
# Execute the script.
######################
# ${exSCR_CONVENTIONAL:-$HOMErtma3d/scripts/${RUN}/ex${RUN}_conventional.ksh}
${HOMErtma3d}/scripts/exrtma3d_conventional.ksh
export err=$?; err_chk

msg="$0 of $job completed normally"
postmsg $jlogfile "$msg"

date

set +x
