#!/bin/ksh

# --- for debug --- #
date
export PS4=' $SECONDS + ' 
set -x

#######################################################
# The following variable could be defined in the 
# submission script (the ecf script *.sms, or ROCOTO *.xml),
# if not, they will take the default values which is set 
# for the NCO running enviroment
#######################################################
# Make sure DATAHOME is defined and exists
if [ ! "${DATAHOME}" ]; then
  ${ECHO} "ERROR: \$DATAHOME is not defined!"
  exit 1
fi

# Make sure START_TIME is defined and in the correct format
if [ ! "${START_TIME}" ]; then
  ${ECHO} "ERROR: \$START_TIME is not defined!"
  exit 1
else
  if [ `${ECHO} "${START_TIME}" | ${AWK} '/^[[:digit:]]{10}$/'` ]; then
  export  START_TIME=`${ECHO} "${START_TIME}" | ${SED} 's/\([[:digit:]]\{2\}\)$/ \1/'`
  elif [ ! "`${ECHO} "${START_TIME}" | ${AWK} '/^[[:digit:]]{8}[[:blank:]]{1}[[:digit:]]{2}$/'`" ]; then
    ${ECHO} "ERROR: start time, '${START_TIME}', is not in 'yyyymmddhh' or 'yyyymmdd hh' format"
    exit 1
  fi
fi

if [ ! -d "${NSSL}" ]; then
  ${ECHO} "ERROR: directory '${NSSL}' does not exist!"
  exit 1
fi

if [ ! "${SUBH_TIME}" ]; then
  ${ECHO} "ERROR: \$SUBH_TIME is not defined!"
  exit 1
else
  export subh=${SUBH_TIME}
fi

# Create the obsprd directory if necessary and cd into it
if [ ! -d "${DATAHOME}" ]; then
  ${MKDIR} -p ${DATAHOME}
fi
cd ${DATAHOME}

# Compute date & time components for the analysis time
export YYYY1=`${DATE} +"%Y" -d "${START_TIME}"`
export MM1=`${DATE} +"%m" -d "${START_TIME}"`
export DD1=`${DATE} +"%d" -d "${START_TIME}"`
export HH1=`${DATE} +"%H" -d "${START_TIME}"`
export NEXT_HOUR=`${DATE} +"%Y%m%d%H" -d "${START_TIME} + 1 hour"`
export NEXT_HOUR=`${ECHO} "${NEXT_HOUR}" | ${SED} 's/\([[:digit:]]\{2\}\)$/ \1/'`
export YYYY2=`${DATE} +"%Y" -d "${NEXT_HOUR}"`
export MM2=`${DATE} +"%m" -d "${NEXT_HOUR}"`
export DD2=`${DATE} +"%d" -d "${NEXT_HOUR}"`
export HH2=`${DATE} +"%H" -d "${NEXT_HOUR}"`


######################
# Execute the script.
######################
# ${exSCR_RADAR_LINKS:-$HOMErtma3d/scripts/${RUN}/ex${RUN}_radar_links.ksh}
${HOMErtma3d}/scripts/exrtma3d_radar_links.ksh
export err=$?; err_chk

msg="$0 of $job completed normally"
postmsg $jlogfile "$msg"

date

set +x
