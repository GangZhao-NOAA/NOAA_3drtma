#!/bin/ksh

# --- for debug --- #
date
export PS4=' $SECONDS + ' 
set -x

#######################################################
# The following variable could be defined in the 
# submission script (the ecf script *.sms, or ROCOTO *.xml),
# if not, they will take the default values which is set 
# for the NCO running enviroment
#######################################################

#set endian conversion options for use with Intel compilers
# export F_UFMTENDIAN="big;little:10,15,66"
# export GMPIENVVAR=F_UFMTENDIAN
export MV2_ON_DEMAND_THRESHOLD=256

# Set the path to the gsi executable
export MOSAIC=${GSI_ROOT}/process_NSSL_mosaic.exe
export fixdir=${FIX_ROOT}

# Make sure DATAHOME is defined and exists
if [ ! "${DATAHOME}" ]; then
  ${ECHO} "ERROR: \$DATAHOME is not defined!"
  exit 1
fi
if [ ! -d "${DATAHOME}" ]; then
  ${ECHO} "NOTE: DATAHOME directory '${DATAHOME}' does not exist!"
fi

if [ ! "${DATAROOT}" ]; then
  ${ECHO} "ERROR: \$DATAROOT is not defined!"
  exit 1
fi
if [ ! -d "${DATAROOT}" ]; then
  ${ECHO} "ERROR: DATAROOT directory '${DATAROOT}' does not exist!"
  exit 1
fi

# Make sure GSI_ROOT is defined and exists
if [ ! "${GSI_ROOT}" ]; then
  ${ECHO} "ERROR: \$GSI_ROOT is not defined!"
  exit 1
fi
if [ ! -d "${GSI_ROOT}" ]; then
  ${ECHO} "ERROR: GSI_ROOT directory '${GSI_ROOT}' does not exist!"
  exit 1
fi

# Make sure sub-hourly time is defined and exists
if [ ! "${SUBH_TIME}" ]; then
  ${ECHO} "ERROR: \$SUBH_TIME is not defined!"
  exit 1
fi

# Make sure START_TIME is defined and in the correct format
if [ ! "${START_TIME}" ]; then
  ${ECHO} "ERROR: \$START_TIME is not defined!"
  exit 1
else
  if [ `${ECHO} "${START_TIME}" | ${AWK} '/^[[:digit:]]{10}$/'` ]; then
  export START_TIME=`${ECHO} "${START_TIME}" | ${SED} 's/\([[:digit:]]\{2\}\)$/ \1/'`
  elif [ ! "`${ECHO} "${START_TIME}" | ${AWK} '/^[[:digit:]]{8}[[:blank:]]{1}[[:digit:]]{2}$/'`" ]; then
    ${ECHO} "ERROR: start time, '${START_TIME}', is not in 'yyyymmddhh' or 'yyyymmdd hh' format"
    exit 1
  fi
  export START_TIME=`${DATE} -d "${START_TIME} ${SUBH_TIME} minutes"`
fi

# Compute date & time components for the analysis time
export YYYYJJJHH00=`${DATE} +"%Y%j%H00" -d "${START_TIME}"`
export YYYYMMDDHH=`${DATE} +"%Y%m%d%H" -d "${START_TIME}"`
export YYYY=`${DATE} +"%Y" -d "${START_TIME}"`
export MM=`${DATE} +"%m" -d "${START_TIME}"`
export DD=`${DATE} +"%d" -d "${START_TIME}"`
export HH=`${DATE} +"%H" -d "${START_TIME}"`

typeset -Z2 mm mm1 mm2 mm3
export mm=`${DATE} +"%M" -d "${START_TIME}"`
export mm1=$((${mm}+1))
export mm2=$((${mm1}+1))
export mm3=$((${mm2}+1))

  
######################
# Execute the script.
######################
# ${exSCR_RADAR:-$HOMErtma3d/scripts/${RUN}/ex${RUN}_radar.ksh}
${HOMErtma3d}/scripts/exrtma3d_radar.ksh
export err=$?; err_chk

msg="$0 of $job completed normally"
postmsg $jlogfile "$msg"

date

set +x
